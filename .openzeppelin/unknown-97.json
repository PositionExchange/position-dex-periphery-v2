{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xD3C9f68f850973236B5dacDf2393DF513001Ca35",
    "txHash": "0x6438ea3170d01d3fde69addabec844eade149adb69554f5568c9b6a30f5992ca"
  },
  "proxies": [
    {
      "address": "0x1fdb3eB0EB9DAF3b362De3e6DE28e4a8E53BB305",
      "txHash": "0x0cdf80a151446897f12f1895b43a588d0f18909d70f40533810809436e749f38",
      "kind": "transparent"
    },
    {
      "address": "0xbb49a36eE091D823A45b222161c7630B5d3361F6",
      "txHash": "0x408f424f6f0d4505afe67979ee3c07c54240c2bb4f2c8f7df99cae598126673b",
      "kind": "transparent"
    },
    {
      "address": "0xD0Be3b3d3E4B3830c15d027bD3fBBB3709EdD69D",
      "txHash": "0xc1127b519d085136ac99fdb2fb07c995c2460538e29481762239cefad7e57523",
      "kind": "transparent"
    },
    {
      "address": "0x24f17a59BDa03D963476E2B7DB4B30bed5f27193",
      "txHash": "0x669c7813cc60c22769b8ea187c4994e0b4c171116291635a4588eeba45e5ac79",
      "kind": "transparent"
    },
    {
      "address": "0xFCA38C659dEcFAC7F14b266d17ef40A4943889AA",
      "txHash": "0x0ff26611aa1306aa513ddc7abe173f24f35873e78d95c07e91e9c1ea514e8455",
      "kind": "transparent"
    },
    {
      "address": "0x92CB0A4512cCc2e910614269d80424F9C7B723F0",
      "txHash": "0xea312d7f07b90487d56b7eb10353e47af4d81498802b57c579be12a98d3519f9",
      "kind": "transparent"
    }
  ],
  "impls": {
    "15322096b356b20a6c260ef20be6696427e14dc6c0df03de9d0807b47672a99a": {
      "address": "0x5e426c2240faE91f17c221Df2AaBb5F7342E4770",
      "txHash": "0xc50eb3f933283c1ca83b21d37cd639f6d6e0f66579717a41e5ee9f824564cdc1",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "51",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "spotHouse",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "SpotFactoryStorage",
            "src": "contracts/libraries/types/SpotFactoryStorage.sol:7"
          },
          {
            "label": "positionLiquidity",
            "offset": 0,
            "slot": "202",
            "type": "t_address",
            "contract": "SpotFactoryStorage",
            "src": "contracts/libraries/types/SpotFactoryStorage.sol:9"
          },
          {
            "label": "pathPairManagers",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "SpotFactoryStorage",
            "src": "contracts/libraries/types/SpotFactoryStorage.sol:12"
          },
          {
            "label": "allPairManager",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_struct(Pair)2353_storage)",
            "contract": "SpotFactoryStorage",
            "src": "contracts/libraries/types/SpotFactoryStorage.sol:14"
          },
          {
            "label": "allowedAddressAddPair",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "SpotFactoryStorage",
            "src": "contracts/libraries/types/SpotFactoryStorage.sol:16"
          },
          {
            "label": "ownerPairManager",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_address)",
            "contract": "SpotFactoryStorage",
            "src": "contracts/libraries/types/SpotFactoryStorage.sol:19"
          },
          {
            "label": "stakingManagerOfPair",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "SpotFactoryStorage",
            "src": "contracts/libraries/types/SpotFactoryStorage.sol:22"
          },
          {
            "label": "feeShareAmm",
            "offset": 0,
            "slot": "208",
            "type": "t_uint32",
            "contract": "SpotFactoryStorage",
            "src": "contracts/libraries/types/SpotFactoryStorage.sol:26"
          },
          {
            "label": "positionRouter",
            "offset": 4,
            "slot": "208",
            "type": "t_address",
            "contract": "SpotFactoryStorage",
            "src": "contracts/libraries/types/SpotFactoryStorage.sol:27"
          },
          {
            "label": "mappingVersionTemplate",
            "offset": 0,
            "slot": "209",
            "type": "t_mapping(t_uint32,t_address)",
            "contract": "SpotFactoryStorage",
            "src": "contracts/libraries/types/SpotFactoryStorage.sol:29"
          },
          {
            "label": "latestVersion",
            "offset": 0,
            "slot": "210",
            "type": "t_uint32",
            "contract": "SpotFactoryStorage",
            "src": "contracts/libraries/types/SpotFactoryStorage.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "211",
            "type": "t_array(t_uint256)49_storage",
            "contract": "SpotFactoryStorage",
            "src": "contracts/libraries/types/SpotFactoryStorage.sol:38"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Pair)2353_storage)": {
            "label": "mapping(address => struct ISpotFactory.Pair)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint32,t_address)": {
            "label": "mapping(uint32 => address)",
            "numberOfBytes": "32"
          },
          "t_struct(Pair)2353_storage": {
            "label": "struct ISpotFactory.Pair",
            "members": [
              {
                "label": "BaseAsset",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "QuoteAsset",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "566e9e947ff6c0a443337ed50289dc409df594a99206a6ee984c4e17b83ac8da": {
      "address": "0x883Ea301B1201fB823e39C5Bc23aa0b249cD9961",
      "txHash": "0x7f04edb2e47a3b678ba7f1806e45ebf48807f9953a018b15632e8f80766dd2a5",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "51",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "defaultFeePercentage",
            "offset": 0,
            "slot": "201",
            "type": "t_uint16",
            "contract": "StrategyFee",
            "src": "contracts/libraries/extensions/StrategyFee.sol:8"
          },
          {
            "label": "strategyFee",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_struct(FeeDiscount)5990_storage)dyn_storage",
            "contract": "StrategyFee",
            "src": "contracts/libraries/extensions/StrategyFee.sol:16"
          },
          {
            "label": "spotFactory",
            "offset": 0,
            "slot": "203",
            "type": "t_contract(ISpotFactory)5895",
            "contract": "SpotHouseStorage",
            "src": "contracts/libraries/types/SpotHouseStorage.sol:11"
          },
          {
            "label": "WBNB",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "SpotHouseStorage",
            "src": "contracts/libraries/types/SpotHouseStorage.sol:13"
          },
          {
            "label": "limitOrders",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_mapping(t_address,t_array(t_struct(Data)5978_storage)dyn_storage))",
            "contract": "SpotHouseStorage",
            "src": "contracts/libraries/types/SpotHouseStorage.sol:15"
          },
          {
            "label": "withdrawBNB",
            "offset": 0,
            "slot": "206",
            "type": "t_contract(IWithdrawBNB)5961",
            "contract": "SpotHouseStorage",
            "src": "contracts/libraries/types/SpotHouseStorage.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)49_storage",
            "contract": "SpotHouseStorage",
            "src": "contracts/libraries/types/SpotHouseStorage.sol:51"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Data)5978_storage)dyn_storage": {
            "label": "struct SpotLimitOrder.Data[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(FeeDiscount)5990_storage)dyn_storage": {
            "label": "struct StrategyFee.FeeDiscount[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(ISpotFactory)5895": {
            "label": "contract ISpotFactory",
            "numberOfBytes": "20"
          },
          "t_contract(IWithdrawBNB)5961": {
            "label": "contract IWithdrawBNB",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_struct(Data)5978_storage)dyn_storage)": {
            "label": "mapping(address => struct SpotLimitOrder.Data[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_array(t_struct(Data)5978_storage)dyn_storage))": {
            "label": "mapping(address => mapping(address => struct SpotLimitOrder.Data[]))",
            "numberOfBytes": "32"
          },
          "t_struct(Data)5978_storage": {
            "label": "struct SpotLimitOrder.Data",
            "members": [
              {
                "label": "pip",
                "type": "t_uint128",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "orderId",
                "type": "t_uint64",
                "offset": 16,
                "slot": "0"
              },
              {
                "label": "isBuy",
                "type": "t_bool",
                "offset": 24,
                "slot": "0"
              },
              {
                "label": "blockNumber",
                "type": "t_uint40",
                "offset": 25,
                "slot": "0"
              },
              {
                "label": "fee",
                "type": "t_uint16",
                "offset": 30,
                "slot": "0"
              },
              {
                "label": "quoteAmount",
                "type": "t_uint128",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "baseAmount",
                "type": "t_uint128",
                "offset": 16,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(FeeDiscount)5990_storage": {
            "label": "struct StrategyFee.FeeDiscount",
            "members": [
              {
                "label": "minHold",
                "type": "t_uint32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxHold",
                "type": "t_uint32",
                "offset": 4,
                "slot": "0"
              },
              {
                "label": "fee",
                "type": "t_uint16",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint128": {
            "label": "uint128",
            "numberOfBytes": "16"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint40": {
            "label": "uint40",
            "numberOfBytes": "5"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "0d4898d575e23a986dc12f6e12ee9c0d19441784e7408266c93877579ec76c4b": {
      "address": "0xF22d23250F26f0e9aa6D0Aa9d8b7fAf6fd6D3Ca6",
      "txHash": "0xbb9932e06f6769bd60fcfb539b9379cf8136dc62fbe9256d0f6bda8b26a990e2",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "concentratedLiquidity",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_uint256,t_struct(Data)30268_storage)",
            "contract": "LiquidityManager",
            "src": "contracts/implement/LiquidityManager.sol:26"
          },
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "1",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "1",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "103",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "107",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "108",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:532"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "154",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "156",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:202"
          },
          {
            "label": "tokenID",
            "offset": 0,
            "slot": "202",
            "type": "t_uint256",
            "contract": "LiquidityManagerNFT",
            "src": "contracts/implement/LiquidityManagerNFT.sol:16"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "204",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "253",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "254",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "spotFactory",
            "offset": 0,
            "slot": "303",
            "type": "t_contract(ISpotFactory)28641",
            "contract": "PositionNondisperseLiquidity",
            "src": "contracts/PositionNondisperseLiquidity.sol:40"
          },
          {
            "label": "withdrawBNB",
            "offset": 0,
            "slot": "304",
            "type": "t_contract(IWithdrawBNB)29425",
            "contract": "PositionNondisperseLiquidity",
            "src": "contracts/PositionNondisperseLiquidity.sol:41"
          },
          {
            "label": "WBNB",
            "offset": 0,
            "slot": "305",
            "type": "t_address",
            "contract": "PositionNondisperseLiquidity",
            "src": "contracts/PositionNondisperseLiquidity.sol:42"
          },
          {
            "label": "counterParties",
            "offset": 0,
            "slot": "306",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "PositionNondisperseLiquidity",
            "src": "contracts/PositionNondisperseLiquidity.sol:44"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IMatchingEngineAMM)13889": {
            "label": "contract IMatchingEngineAMM",
            "numberOfBytes": "20"
          },
          "t_contract(ISpotFactory)28641": {
            "label": "contract ISpotFactory",
            "numberOfBytes": "20"
          },
          "t_contract(IWithdrawBNB)29425": {
            "label": "contract IWithdrawBNB",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Data)30268_storage)": {
            "label": "mapping(uint256 => struct UserLiquidity.Data)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Data)30268_storage": {
            "label": "struct UserLiquidity.Data",
            "members": [
              {
                "label": "liquidity",
                "type": "t_uint128",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "indexedPipRange",
                "type": "t_uint32",
                "offset": 16,
                "slot": "0"
              },
              {
                "label": "feeGrowthBase",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "feeGrowthQuote",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "pool",
                "type": "t_contract(IMatchingEngineAMM)13889",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint128": {
            "label": "uint128",
            "numberOfBytes": "16"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "0d7b96d7d3c0e47dce1813a5fea83380a6855c43dc23d9c9374ac7f325a79681": {
      "address": "0xb66158aF187d0E4E26B30f8960c38c3cfeB2F367",
      "txHash": "0xbdcd8c78df4d4d49a5edcb28694347643508d5c9507a2ccb8a8bbe82a3d3b78d",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "vestingSchedule",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_enum(Frequency)10246,t_array(t_struct(VestingData)9902_storage)dyn_storage))",
            "contract": "VestingScheduleBase",
            "src": "@positionex/posi-token/contracts/VestingScheduleBase.sol:8"
          },
          {
            "label": "_isWhiteListVesting",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "VestingScheduleBase",
            "src": "@positionex/posi-token/contracts/VestingScheduleBase.sol:9"
          },
          {
            "label": "position",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IERC20)7513",
            "contract": "PositionStakingDexManager",
            "src": "contracts/staking/PositionStakingDexManager.sol:82"
          },
          {
            "label": "posiTreasury",
            "offset": 0,
            "slot": "154",
            "type": "t_contract(IPosiTreasury)14372",
            "contract": "PositionStakingDexManager",
            "src": "contracts/staking/PositionStakingDexManager.sol:83"
          },
          {
            "label": "positionNondisperseLiquidity",
            "offset": 0,
            "slot": "155",
            "type": "t_contract(IPositionNondisperseLiquidity)13514",
            "contract": "PositionStakingDexManager",
            "src": "contracts/staking/PositionStakingDexManager.sol:86"
          },
          {
            "label": "devAddress",
            "offset": 0,
            "slot": "156",
            "type": "t_address",
            "contract": "PositionStakingDexManager",
            "src": "contracts/staking/PositionStakingDexManager.sol:89"
          },
          {
            "label": "positionPerBlock",
            "offset": 0,
            "slot": "157",
            "type": "t_uint256",
            "contract": "PositionStakingDexManager",
            "src": "contracts/staking/PositionStakingDexManager.sol:91"
          },
          {
            "label": "feeAddress",
            "offset": 0,
            "slot": "158",
            "type": "t_address",
            "contract": "PositionStakingDexManager",
            "src": "contracts/staking/PositionStakingDexManager.sol:93"
          },
          {
            "label": "BONUS_MULTIPLIER",
            "offset": 0,
            "slot": "159",
            "type": "t_uint256",
            "contract": "PositionStakingDexManager",
            "src": "contracts/staking/PositionStakingDexManager.sol:95"
          },
          {
            "label": "MAXIMUM_HARVEST_INTERVAL",
            "offset": 0,
            "slot": "160",
            "type": "t_uint256",
            "contract": "PositionStakingDexManager",
            "src": "contracts/staking/PositionStakingDexManager.sol:97"
          },
          {
            "label": "poolInfo",
            "offset": 0,
            "slot": "161",
            "type": "t_mapping(t_address,t_struct(PoolInfo)14409_storage)",
            "contract": "PositionStakingDexManager",
            "src": "contracts/staking/PositionStakingDexManager.sol:100"
          },
          {
            "label": "userInfo",
            "offset": 0,
            "slot": "162",
            "type": "t_mapping(t_address,t_mapping(t_address,t_struct(UserInfo)14394_storage))",
            "contract": "PositionStakingDexManager",
            "src": "contracts/staking/PositionStakingDexManager.sol:102"
          },
          {
            "label": "pools",
            "offset": 0,
            "slot": "163",
            "type": "t_array(t_address)dyn_storage",
            "contract": "PositionStakingDexManager",
            "src": "contracts/staking/PositionStakingDexManager.sol:103"
          },
          {
            "label": "totalAllocPoint",
            "offset": 0,
            "slot": "164",
            "type": "t_uint256",
            "contract": "PositionStakingDexManager",
            "src": "contracts/staking/PositionStakingDexManager.sol:105"
          },
          {
            "label": "startBlock",
            "offset": 0,
            "slot": "165",
            "type": "t_uint256",
            "contract": "PositionStakingDexManager",
            "src": "contracts/staking/PositionStakingDexManager.sol:107"
          },
          {
            "label": "totalLockedUpRewards",
            "offset": 0,
            "slot": "166",
            "type": "t_uint256",
            "contract": "PositionStakingDexManager",
            "src": "contracts/staking/PositionStakingDexManager.sol:109"
          },
          {
            "label": "posiStakingPid",
            "offset": 0,
            "slot": "167",
            "type": "t_uint256",
            "contract": "PositionStakingDexManager",
            "src": "contracts/staking/PositionStakingDexManager.sol:111"
          },
          {
            "label": "positionReferral",
            "offset": 0,
            "slot": "168",
            "type": "t_contract(IPositionReferral)14364",
            "contract": "PositionStakingDexManager",
            "src": "contracts/staking/PositionStakingDexManager.sol:114"
          },
          {
            "label": "referralCommissionRate",
            "offset": 20,
            "slot": "168",
            "type": "t_uint16",
            "contract": "PositionStakingDexManager",
            "src": "contracts/staking/PositionStakingDexManager.sol:116"
          },
          {
            "label": "MAXIMUM_REFERRAL_COMMISSION_RATE",
            "offset": 22,
            "slot": "168",
            "type": "t_uint16",
            "contract": "PositionStakingDexManager",
            "src": "contracts/staking/PositionStakingDexManager.sol:118"
          },
          {
            "label": "stakingMinted",
            "offset": 0,
            "slot": "169",
            "type": "t_uint256",
            "contract": "PositionStakingDexManager",
            "src": "contracts/staking/PositionStakingDexManager.sol:120"
          },
          {
            "label": "harvestFeeShareRate",
            "offset": 0,
            "slot": "170",
            "type": "t_uint16",
            "contract": "PositionStakingDexManager",
            "src": "contracts/staking/PositionStakingDexManager.sol:122"
          },
          {
            "label": "MAXIMUM_HARVEST_FEE_SHARE",
            "offset": 2,
            "slot": "170",
            "type": "t_uint16",
            "contract": "PositionStakingDexManager",
            "src": "contracts/staking/PositionStakingDexManager.sol:123"
          },
          {
            "label": "userNft",
            "offset": 0,
            "slot": "171",
            "type": "t_mapping(t_address,t_mapping(t_address,t_array(t_uint256)dyn_storage))",
            "contract": "PositionStakingDexManager",
            "src": "contracts/staking/PositionStakingDexManager.sol:126"
          },
          {
            "label": "nftOwnedIndex",
            "offset": 0,
            "slot": "172",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "PositionStakingDexManager",
            "src": "contracts/staking/PositionStakingDexManager.sol:128"
          },
          {
            "label": "powerNft",
            "offset": 0,
            "slot": "173",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "PositionStakingDexManager",
            "src": "contracts/staking/PositionStakingDexManager.sol:131"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(VestingData)9902_storage)dyn_storage": {
            "label": "struct VestingScheduleLogic.VestingData[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20)7513": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(IPosiTreasury)14372": {
            "label": "contract IPosiTreasury",
            "numberOfBytes": "20"
          },
          "t_contract(IPositionNondisperseLiquidity)13514": {
            "label": "contract IPositionNondisperseLiquidity",
            "numberOfBytes": "20"
          },
          "t_contract(IPositionReferral)14364": {
            "label": "contract IPositionReferral",
            "numberOfBytes": "20"
          },
          "t_enum(Frequency)10246": {
            "label": "enum VestingFrequencyHelper.Frequency",
            "members": [
              "Daily",
              "Weekly",
              "Monthly",
              "Bimonthly",
              "Quarterly",
              "Biannually"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_array(t_uint256)dyn_storage))": {
            "label": "mapping(address => mapping(address => uint256[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(UserInfo)14394_storage))": {
            "label": "mapping(address => mapping(address => struct PositionStakingDexManager.UserInfo))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_enum(Frequency)10246,t_array(t_struct(VestingData)9902_storage)dyn_storage))": {
            "label": "mapping(address => mapping(enum VestingFrequencyHelper.Frequency => struct VestingScheduleLogic.VestingData[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(PoolInfo)14409_storage)": {
            "label": "mapping(address => struct PositionStakingDexManager.PoolInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UserInfo)14394_storage)": {
            "label": "mapping(address => struct PositionStakingDexManager.UserInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(Frequency)10246,t_array(t_struct(VestingData)9902_storage)dyn_storage)": {
            "label": "mapping(enum VestingFrequencyHelper.Frequency => struct VestingScheduleLogic.VestingData[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(PoolInfo)14409_storage": {
            "label": "struct PositionStakingDexManager.PoolInfo",
            "members": [
              {
                "label": "poolId",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalStaked",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "allocPoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "lastRewardBlock",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "accPositionPerShare",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "depositFeeBP",
                "type": "t_uint16",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "harvestInterval",
                "type": "t_uint128",
                "offset": 2,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(UserInfo)14394_storage": {
            "label": "struct PositionStakingDexManager.UserInfo",
            "members": [
              {
                "label": "amount",
                "type": "t_uint128",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "rewardDebt",
                "type": "t_uint128",
                "offset": 16,
                "slot": "0"
              },
              {
                "label": "rewardLockedUp",
                "type": "t_uint128",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "nextHarvestUntil",
                "type": "t_uint128",
                "offset": 16,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(VestingData)9902_storage": {
            "label": "struct VestingScheduleLogic.VestingData",
            "members": [
              {
                "label": "vestingTime",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint192",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint128": {
            "label": "uint128",
            "numberOfBytes": "16"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint192": {
            "label": "uint192",
            "numberOfBytes": "24"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "66c397ac2314da3e87068994425078e04151fe4db07e51fa47b12c6f4b775da9": {
      "address": "0x6FF4Fff635Ff3E4D8B53C7A284757ae265A792B3",
      "txHash": "0x1e018e78819ef6a793ccef463ca10f308415fb0fd537ad808cc1265a70ce9bcf",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "51",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "factory",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(ISpotFactory)20979",
            "contract": "PositionRouterStorage",
            "src": "contracts/libraries/types/PositionRouterStorage.sol:13"
          },
          {
            "label": "spotHouse",
            "offset": 0,
            "slot": "202",
            "type": "t_contract(ISpotHouse)20988",
            "contract": "PositionRouterStorage",
            "src": "contracts/libraries/types/PositionRouterStorage.sol:15"
          },
          {
            "label": "withdrawBNB",
            "offset": 0,
            "slot": "203",
            "type": "t_contract(IWithdrawBNB)21763",
            "contract": "PositionRouterStorage",
            "src": "contracts/libraries/types/PositionRouterStorage.sol:17"
          },
          {
            "label": "WBNB",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "PositionRouterStorage",
            "src": "contracts/libraries/types/PositionRouterStorage.sol:19"
          },
          {
            "label": "uniSwapRouterV2",
            "offset": 0,
            "slot": "205",
            "type": "t_contract(IUniswapV2Router02)21686",
            "contract": "PositionRouterStorage",
            "src": "contracts/libraries/types/PositionRouterStorage.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "206",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PositionRouterStorage",
            "src": "contracts/libraries/types/PositionRouterStorage.sol:28"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(ISpotFactory)20979": {
            "label": "contract ISpotFactory",
            "numberOfBytes": "20"
          },
          "t_contract(ISpotHouse)20988": {
            "label": "contract ISpotHouse",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Router02)21686": {
            "label": "contract IUniswapV2Router02",
            "numberOfBytes": "20"
          },
          "t_contract(IWithdrawBNB)21763": {
            "label": "contract IWithdrawBNB",
            "numberOfBytes": "20"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "05c0e74db7f7597650d1d753b28778a50741b7a99bc2182639f4caf2d89b4ebe": {
      "address": "0x36a723f97e8dEDbd8F6360416188FB0f56ea1e61",
      "txHash": "0xa27d55a7ad11f955a366ef759746460ace4aec0190b1fcbdb3774b4866735901",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "51",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "defaultFeePercentage",
            "offset": 0,
            "slot": "201",
            "type": "t_uint16",
            "contract": "StrategyFee",
            "src": "contracts/libraries/extensions/StrategyFee.sol:8"
          },
          {
            "label": "strategyFee",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_struct(FeeDiscount)29454_storage)dyn_storage",
            "contract": "StrategyFee",
            "src": "contracts/libraries/extensions/StrategyFee.sol:16"
          },
          {
            "label": "spotFactory",
            "offset": 0,
            "slot": "203",
            "type": "t_contract(ISpotFactory)28641",
            "contract": "SpotHouseStorage",
            "src": "contracts/libraries/types/SpotHouseStorage.sol:11"
          },
          {
            "label": "WBNB",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "SpotHouseStorage",
            "src": "contracts/libraries/types/SpotHouseStorage.sol:13"
          },
          {
            "label": "limitOrders",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_mapping(t_address,t_array(t_struct(Data)29442_storage)dyn_storage))",
            "contract": "SpotHouseStorage",
            "src": "contracts/libraries/types/SpotHouseStorage.sol:15"
          },
          {
            "label": "withdrawBNB",
            "offset": 0,
            "slot": "206",
            "type": "t_contract(IWithdrawBNB)29425",
            "contract": "SpotHouseStorage",
            "src": "contracts/libraries/types/SpotHouseStorage.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)49_storage",
            "contract": "SpotHouseStorage",
            "src": "contracts/libraries/types/SpotHouseStorage.sol:51"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Data)29442_storage)dyn_storage": {
            "label": "struct SpotLimitOrder.Data[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(FeeDiscount)29454_storage)dyn_storage": {
            "label": "struct StrategyFee.FeeDiscount[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(ISpotFactory)28641": {
            "label": "contract ISpotFactory",
            "numberOfBytes": "20"
          },
          "t_contract(IWithdrawBNB)29425": {
            "label": "contract IWithdrawBNB",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_struct(Data)29442_storage)dyn_storage)": {
            "label": "mapping(address => struct SpotLimitOrder.Data[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_array(t_struct(Data)29442_storage)dyn_storage))": {
            "label": "mapping(address => mapping(address => struct SpotLimitOrder.Data[]))",
            "numberOfBytes": "32"
          },
          "t_struct(Data)29442_storage": {
            "label": "struct SpotLimitOrder.Data",
            "members": [
              {
                "label": "pip",
                "type": "t_uint128",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "orderId",
                "type": "t_uint64",
                "offset": 16,
                "slot": "0"
              },
              {
                "label": "isBuy",
                "type": "t_bool",
                "offset": 24,
                "slot": "0"
              },
              {
                "label": "blockNumber",
                "type": "t_uint40",
                "offset": 25,
                "slot": "0"
              },
              {
                "label": "fee",
                "type": "t_uint16",
                "offset": 30,
                "slot": "0"
              },
              {
                "label": "quoteAmount",
                "type": "t_uint128",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "baseAmount",
                "type": "t_uint128",
                "offset": 16,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(FeeDiscount)29454_storage": {
            "label": "struct StrategyFee.FeeDiscount",
            "members": [
              {
                "label": "minHold",
                "type": "t_uint32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxHold",
                "type": "t_uint32",
                "offset": 4,
                "slot": "0"
              },
              {
                "label": "fee",
                "type": "t_uint16",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint128": {
            "label": "uint128",
            "numberOfBytes": "16"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint40": {
            "label": "uint40",
            "numberOfBytes": "5"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "6ac6ef79058542e4d2c5a8d6ab98400e8577586d2fc6dd3ca20cddf42736e838": {
      "address": "0x147740465F3b8249F4B98154e2e06cfb66F1AA28",
      "txHash": "0x1e3e800e44565d74b5cf37d5685663507bcfc7f120498fe988ae8d70615789c9",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "51",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "spotHouse",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "SpotFactoryStorage",
            "src": "contracts/libraries/types/SpotFactoryStorage.sol:7"
          },
          {
            "label": "positionLiquidity",
            "offset": 0,
            "slot": "202",
            "type": "t_address",
            "contract": "SpotFactoryStorage",
            "src": "contracts/libraries/types/SpotFactoryStorage.sol:9"
          },
          {
            "label": "pathPairManagers",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "SpotFactoryStorage",
            "src": "contracts/libraries/types/SpotFactoryStorage.sol:12"
          },
          {
            "label": "allPairManager",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_struct(Pair)28570_storage)",
            "contract": "SpotFactoryStorage",
            "src": "contracts/libraries/types/SpotFactoryStorage.sol:14"
          },
          {
            "label": "allowedAddressAddPair",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "SpotFactoryStorage",
            "src": "contracts/libraries/types/SpotFactoryStorage.sol:16"
          },
          {
            "label": "ownerPairManager",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_address)",
            "contract": "SpotFactoryStorage",
            "src": "contracts/libraries/types/SpotFactoryStorage.sol:19"
          },
          {
            "label": "stakingManagerOfPair",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "SpotFactoryStorage",
            "src": "contracts/libraries/types/SpotFactoryStorage.sol:22"
          },
          {
            "label": "feeShareAmm",
            "offset": 0,
            "slot": "208",
            "type": "t_uint32",
            "contract": "SpotFactoryStorage",
            "src": "contracts/libraries/types/SpotFactoryStorage.sol:26"
          },
          {
            "label": "positionRouter",
            "offset": 4,
            "slot": "208",
            "type": "t_address",
            "contract": "SpotFactoryStorage",
            "src": "contracts/libraries/types/SpotFactoryStorage.sol:27"
          },
          {
            "label": "mappingVersionTemplate",
            "offset": 0,
            "slot": "209",
            "type": "t_mapping(t_uint32,t_address)",
            "contract": "SpotFactoryStorage",
            "src": "contracts/libraries/types/SpotFactoryStorage.sol:29"
          },
          {
            "label": "latestVersion",
            "offset": 0,
            "slot": "210",
            "type": "t_uint32",
            "contract": "SpotFactoryStorage",
            "src": "contracts/libraries/types/SpotFactoryStorage.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "211",
            "type": "t_array(t_uint256)49_storage",
            "contract": "SpotFactoryStorage",
            "src": "contracts/libraries/types/SpotFactoryStorage.sol:37"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Pair)28570_storage)": {
            "label": "mapping(address => struct ISpotFactory.Pair)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint32,t_address)": {
            "label": "mapping(uint32 => address)",
            "numberOfBytes": "32"
          },
          "t_struct(Pair)28570_storage": {
            "label": "struct ISpotFactory.Pair",
            "members": [
              {
                "label": "BaseAsset",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "QuoteAsset",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "091ff5b6c001cca8cc3e93ecf89c3f82c26ec8ed7026033f47c2044aed7ba632": {
      "address": "0x3295bEa7DC83b4c771Bd43a61599F30123728881",
      "txHash": "0xcfe51d9c515188372ee3a40aad312aeb3a0bdb29f7c3e6bd18e8baae1a31699a",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "vestingSchedule",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_enum(Frequency)10954,t_array(t_struct(VestingData)10610_storage)dyn_storage))",
            "contract": "VestingScheduleBase",
            "src": "@positionex/posi-token/contracts/VestingScheduleBase.sol:8"
          },
          {
            "label": "_isWhiteListVesting",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "VestingScheduleBase",
            "src": "@positionex/posi-token/contracts/VestingScheduleBase.sol:9"
          },
          {
            "label": "position",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IERC20)7861",
            "contract": "PositionStakingDexManagerStorage",
            "src": "contracts/libraries/types/PositionStakingDexManagerStorage.sol:45"
          },
          {
            "label": "posiTreasury",
            "offset": 0,
            "slot": "154",
            "type": "t_contract(IPosiTreasury)19687",
            "contract": "PositionStakingDexManagerStorage",
            "src": "contracts/libraries/types/PositionStakingDexManagerStorage.sol:46"
          },
          {
            "label": "positionNondisperseLiquidity",
            "offset": 0,
            "slot": "155",
            "type": "t_contract(IPositionNondisperseLiquidity)19699",
            "contract": "PositionStakingDexManagerStorage",
            "src": "contracts/libraries/types/PositionStakingDexManagerStorage.sol:49"
          },
          {
            "label": "devAddress",
            "offset": 0,
            "slot": "156",
            "type": "t_address",
            "contract": "PositionStakingDexManagerStorage",
            "src": "contracts/libraries/types/PositionStakingDexManagerStorage.sol:52"
          },
          {
            "label": "positionPerBlock",
            "offset": 0,
            "slot": "157",
            "type": "t_uint256",
            "contract": "PositionStakingDexManagerStorage",
            "src": "contracts/libraries/types/PositionStakingDexManagerStorage.sol:54"
          },
          {
            "label": "feeAddress",
            "offset": 0,
            "slot": "158",
            "type": "t_address",
            "contract": "PositionStakingDexManagerStorage",
            "src": "contracts/libraries/types/PositionStakingDexManagerStorage.sol:56"
          },
          {
            "label": "BONUS_MULTIPLIER",
            "offset": 0,
            "slot": "159",
            "type": "t_uint256",
            "contract": "PositionStakingDexManagerStorage",
            "src": "contracts/libraries/types/PositionStakingDexManagerStorage.sol:58"
          },
          {
            "label": "MAXIMUM_HARVEST_INTERVAL",
            "offset": 0,
            "slot": "160",
            "type": "t_uint256",
            "contract": "PositionStakingDexManagerStorage",
            "src": "contracts/libraries/types/PositionStakingDexManagerStorage.sol:60"
          },
          {
            "label": "poolInfo",
            "offset": 0,
            "slot": "161",
            "type": "t_mapping(t_address,t_struct(PoolInfo)21988_storage)",
            "contract": "PositionStakingDexManagerStorage",
            "src": "contracts/libraries/types/PositionStakingDexManagerStorage.sol:63"
          },
          {
            "label": "userInfo",
            "offset": 0,
            "slot": "162",
            "type": "t_mapping(t_address,t_mapping(t_address,t_struct(UserInfo)21973_storage))",
            "contract": "PositionStakingDexManagerStorage",
            "src": "contracts/libraries/types/PositionStakingDexManagerStorage.sol:65"
          },
          {
            "label": "pools",
            "offset": 0,
            "slot": "163",
            "type": "t_array(t_address)dyn_storage",
            "contract": "PositionStakingDexManagerStorage",
            "src": "contracts/libraries/types/PositionStakingDexManagerStorage.sol:66"
          },
          {
            "label": "totalAllocPoint",
            "offset": 0,
            "slot": "164",
            "type": "t_uint256",
            "contract": "PositionStakingDexManagerStorage",
            "src": "contracts/libraries/types/PositionStakingDexManagerStorage.sol:68"
          },
          {
            "label": "startBlock",
            "offset": 0,
            "slot": "165",
            "type": "t_uint256",
            "contract": "PositionStakingDexManagerStorage",
            "src": "contracts/libraries/types/PositionStakingDexManagerStorage.sol:70"
          },
          {
            "label": "totalLockedUpRewards",
            "offset": 0,
            "slot": "166",
            "type": "t_uint256",
            "contract": "PositionStakingDexManagerStorage",
            "src": "contracts/libraries/types/PositionStakingDexManagerStorage.sol:72"
          },
          {
            "label": "posiStakingPid",
            "offset": 0,
            "slot": "167",
            "type": "t_uint256",
            "contract": "PositionStakingDexManagerStorage",
            "src": "contracts/libraries/types/PositionStakingDexManagerStorage.sol:74"
          },
          {
            "label": "positionReferral",
            "offset": 0,
            "slot": "168",
            "type": "t_contract(IPositionReferral)19726",
            "contract": "PositionStakingDexManagerStorage",
            "src": "contracts/libraries/types/PositionStakingDexManagerStorage.sol:77"
          },
          {
            "label": "referralCommissionRate",
            "offset": 20,
            "slot": "168",
            "type": "t_uint16",
            "contract": "PositionStakingDexManagerStorage",
            "src": "contracts/libraries/types/PositionStakingDexManagerStorage.sol:79"
          },
          {
            "label": "MAXIMUM_REFERRAL_COMMISSION_RATE",
            "offset": 22,
            "slot": "168",
            "type": "t_uint16",
            "contract": "PositionStakingDexManagerStorage",
            "src": "contracts/libraries/types/PositionStakingDexManagerStorage.sol:81"
          },
          {
            "label": "stakingMinted",
            "offset": 0,
            "slot": "169",
            "type": "t_uint256",
            "contract": "PositionStakingDexManagerStorage",
            "src": "contracts/libraries/types/PositionStakingDexManagerStorage.sol:83"
          },
          {
            "label": "harvestFeeShareRate",
            "offset": 0,
            "slot": "170",
            "type": "t_uint16",
            "contract": "PositionStakingDexManagerStorage",
            "src": "contracts/libraries/types/PositionStakingDexManagerStorage.sol:85"
          },
          {
            "label": "userNft",
            "offset": 0,
            "slot": "171",
            "type": "t_mapping(t_address,t_mapping(t_address,t_array(t_uint256)dyn_storage))",
            "contract": "PositionStakingDexManagerStorage",
            "src": "contracts/libraries/types/PositionStakingDexManagerStorage.sol:88"
          },
          {
            "label": "nftOwnedIndex",
            "offset": 0,
            "slot": "172",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "PositionStakingDexManagerStorage",
            "src": "contracts/libraries/types/PositionStakingDexManagerStorage.sol:90"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(VestingData)10610_storage)dyn_storage": {
            "label": "struct VestingScheduleLogic.VestingData[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20)7861": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(IPosiTreasury)19687": {
            "label": "contract IPosiTreasury",
            "numberOfBytes": "20"
          },
          "t_contract(IPositionNondisperseLiquidity)19699": {
            "label": "contract IPositionNondisperseLiquidity",
            "numberOfBytes": "20"
          },
          "t_contract(IPositionReferral)19726": {
            "label": "contract IPositionReferral",
            "numberOfBytes": "20"
          },
          "t_enum(Frequency)10954": {
            "label": "enum VestingFrequencyHelper.Frequency",
            "members": [
              "Daily",
              "Weekly",
              "Monthly",
              "Bimonthly",
              "Quarterly",
              "Biannually"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_array(t_uint256)dyn_storage))": {
            "label": "mapping(address => mapping(address => uint256[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(UserInfo)21973_storage))": {
            "label": "mapping(address => mapping(address => struct PositionStakingDexManagerStorage.UserInfo))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_enum(Frequency)10954,t_array(t_struct(VestingData)10610_storage)dyn_storage))": {
            "label": "mapping(address => mapping(enum VestingFrequencyHelper.Frequency => struct VestingScheduleLogic.VestingData[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(PoolInfo)21988_storage)": {
            "label": "mapping(address => struct PositionStakingDexManagerStorage.PoolInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UserInfo)21973_storage)": {
            "label": "mapping(address => struct PositionStakingDexManagerStorage.UserInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(Frequency)10954,t_array(t_struct(VestingData)10610_storage)dyn_storage)": {
            "label": "mapping(enum VestingFrequencyHelper.Frequency => struct VestingScheduleLogic.VestingData[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_struct(PoolInfo)21988_storage": {
            "label": "struct PositionStakingDexManagerStorage.PoolInfo",
            "members": [
              {
                "label": "poolId",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalStaked",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "allocPoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "lastRewardBlock",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "accPositionPerShare",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "depositFeeBP",
                "type": "t_uint16",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "harvestInterval",
                "type": "t_uint128",
                "offset": 2,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(UserInfo)21973_storage": {
            "label": "struct PositionStakingDexManagerStorage.UserInfo",
            "members": [
              {
                "label": "amount",
                "type": "t_uint128",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "rewardDebt",
                "type": "t_uint128",
                "offset": 16,
                "slot": "0"
              },
              {
                "label": "rewardLockedUp",
                "type": "t_uint128",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "nextHarvestUntil",
                "type": "t_uint128",
                "offset": 16,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(VestingData)10610_storage": {
            "label": "struct VestingScheduleLogic.VestingData",
            "members": [
              {
                "label": "vestingTime",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint192",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint128": {
            "label": "uint128",
            "numberOfBytes": "16"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint192": {
            "label": "uint192",
            "numberOfBytes": "24"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "18b5ef1e0b8da8288dd51c15a0a4d93bbd589f57ba03eecf5eee1ae9646884d5": {
      "address": "0xD54807447Cb74A42Fc70431F318269211CD34d54",
      "txHash": "0xa356d8c9180474dbee59155a64d020719b2cfb09b3780867c2b147bcabc83e5d",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "51",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "factory",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(ISpotFactory)20879",
            "contract": "PositionRouterStorage",
            "src": "contracts/libraries/types/PositionRouterStorage.sol:13"
          },
          {
            "label": "spotHouse",
            "offset": 0,
            "slot": "202",
            "type": "t_contract(ISpotHouse)20888",
            "contract": "PositionRouterStorage",
            "src": "contracts/libraries/types/PositionRouterStorage.sol:15"
          },
          {
            "label": "withdrawBNB",
            "offset": 0,
            "slot": "203",
            "type": "t_contract(IWithdrawBNB)21663",
            "contract": "PositionRouterStorage",
            "src": "contracts/libraries/types/PositionRouterStorage.sol:17"
          },
          {
            "label": "WBNB",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "PositionRouterStorage",
            "src": "contracts/libraries/types/PositionRouterStorage.sol:19"
          },
          {
            "label": "uniSwapRouterV2",
            "offset": 0,
            "slot": "205",
            "type": "t_contract(IUniswapV2Router02)21586",
            "contract": "PositionRouterStorage",
            "src": "contracts/libraries/types/PositionRouterStorage.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "206",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PositionRouterStorage",
            "src": "contracts/libraries/types/PositionRouterStorage.sol:28"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(ISpotFactory)20879": {
            "label": "contract ISpotFactory",
            "numberOfBytes": "20"
          },
          "t_contract(ISpotHouse)20888": {
            "label": "contract ISpotHouse",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Router02)21586": {
            "label": "contract IUniswapV2Router02",
            "numberOfBytes": "20"
          },
          "t_contract(IWithdrawBNB)21663": {
            "label": "contract IWithdrawBNB",
            "numberOfBytes": "20"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "37a23a75f9fe3657adeca5ea5e930f1b8dff6ba14f18d864bc850f424e430f71": {
      "address": "0x74d979CA381827ab13738b5eE3dEbc3DdAfb7126",
      "txHash": "0xde8a0ec84a125fa4bc39b9efa0b4d90d4a243cda91bddcd2e7c55e2250ff452b",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "vestingSchedule",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_enum(Frequency)10841,t_array(t_struct(VestingData)10497_storage)dyn_storage))",
            "contract": "VestingScheduleBase",
            "src": "@positionex/posi-token/contracts/VestingScheduleBase.sol:8"
          },
          {
            "label": "_isWhiteListVesting",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "VestingScheduleBase",
            "src": "@positionex/posi-token/contracts/VestingScheduleBase.sol:9"
          },
          {
            "label": "position",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IERC20)7748",
            "contract": "PositionStakingDexManagerStorage",
            "src": "contracts/libraries/types/PositionStakingDexManagerStorage.sol:45"
          },
          {
            "label": "posiTreasury",
            "offset": 0,
            "slot": "154",
            "type": "t_contract(IPosiTreasury)17574",
            "contract": "PositionStakingDexManagerStorage",
            "src": "contracts/libraries/types/PositionStakingDexManagerStorage.sol:46"
          },
          {
            "label": "positionNondisperseLiquidity",
            "offset": 0,
            "slot": "155",
            "type": "t_contract(IPositionNondisperseLiquidity)17586",
            "contract": "PositionStakingDexManagerStorage",
            "src": "contracts/libraries/types/PositionStakingDexManagerStorage.sol:49"
          },
          {
            "label": "devAddress",
            "offset": 0,
            "slot": "156",
            "type": "t_address",
            "contract": "PositionStakingDexManagerStorage",
            "src": "contracts/libraries/types/PositionStakingDexManagerStorage.sol:52"
          },
          {
            "label": "positionPerBlock",
            "offset": 0,
            "slot": "157",
            "type": "t_uint256",
            "contract": "PositionStakingDexManagerStorage",
            "src": "contracts/libraries/types/PositionStakingDexManagerStorage.sol:54"
          },
          {
            "label": "feeAddress",
            "offset": 0,
            "slot": "158",
            "type": "t_address",
            "contract": "PositionStakingDexManagerStorage",
            "src": "contracts/libraries/types/PositionStakingDexManagerStorage.sol:56"
          },
          {
            "label": "BONUS_MULTIPLIER",
            "offset": 0,
            "slot": "159",
            "type": "t_uint256",
            "contract": "PositionStakingDexManagerStorage",
            "src": "contracts/libraries/types/PositionStakingDexManagerStorage.sol:58"
          },
          {
            "label": "MAXIMUM_HARVEST_INTERVAL",
            "offset": 0,
            "slot": "160",
            "type": "t_uint256",
            "contract": "PositionStakingDexManagerStorage",
            "src": "contracts/libraries/types/PositionStakingDexManagerStorage.sol:60"
          },
          {
            "label": "poolInfo",
            "offset": 0,
            "slot": "161",
            "type": "t_mapping(t_address,t_struct(PoolInfo)18884_storage)",
            "contract": "PositionStakingDexManagerStorage",
            "src": "contracts/libraries/types/PositionStakingDexManagerStorage.sol:63"
          },
          {
            "label": "userInfo",
            "offset": 0,
            "slot": "162",
            "type": "t_mapping(t_address,t_mapping(t_address,t_struct(UserInfo)18869_storage))",
            "contract": "PositionStakingDexManagerStorage",
            "src": "contracts/libraries/types/PositionStakingDexManagerStorage.sol:65"
          },
          {
            "label": "pools",
            "offset": 0,
            "slot": "163",
            "type": "t_array(t_address)dyn_storage",
            "contract": "PositionStakingDexManagerStorage",
            "src": "contracts/libraries/types/PositionStakingDexManagerStorage.sol:66"
          },
          {
            "label": "totalAllocPoint",
            "offset": 0,
            "slot": "164",
            "type": "t_uint256",
            "contract": "PositionStakingDexManagerStorage",
            "src": "contracts/libraries/types/PositionStakingDexManagerStorage.sol:68"
          },
          {
            "label": "startBlock",
            "offset": 0,
            "slot": "165",
            "type": "t_uint256",
            "contract": "PositionStakingDexManagerStorage",
            "src": "contracts/libraries/types/PositionStakingDexManagerStorage.sol:70"
          },
          {
            "label": "totalLockedUpRewards",
            "offset": 0,
            "slot": "166",
            "type": "t_uint256",
            "contract": "PositionStakingDexManagerStorage",
            "src": "contracts/libraries/types/PositionStakingDexManagerStorage.sol:72"
          },
          {
            "label": "posiStakingPid",
            "offset": 0,
            "slot": "167",
            "type": "t_uint256",
            "contract": "PositionStakingDexManagerStorage",
            "src": "contracts/libraries/types/PositionStakingDexManagerStorage.sol:74"
          },
          {
            "label": "positionReferral",
            "offset": 0,
            "slot": "168",
            "type": "t_contract(IPositionReferral)17613",
            "contract": "PositionStakingDexManagerStorage",
            "src": "contracts/libraries/types/PositionStakingDexManagerStorage.sol:77"
          },
          {
            "label": "referralCommissionRate",
            "offset": 20,
            "slot": "168",
            "type": "t_uint16",
            "contract": "PositionStakingDexManagerStorage",
            "src": "contracts/libraries/types/PositionStakingDexManagerStorage.sol:79"
          },
          {
            "label": "MAXIMUM_REFERRAL_COMMISSION_RATE",
            "offset": 22,
            "slot": "168",
            "type": "t_uint16",
            "contract": "PositionStakingDexManagerStorage",
            "src": "contracts/libraries/types/PositionStakingDexManagerStorage.sol:81"
          },
          {
            "label": "stakingMinted",
            "offset": 0,
            "slot": "169",
            "type": "t_uint256",
            "contract": "PositionStakingDexManagerStorage",
            "src": "contracts/libraries/types/PositionStakingDexManagerStorage.sol:83"
          },
          {
            "label": "harvestFeeShareRate",
            "offset": 0,
            "slot": "170",
            "type": "t_uint16",
            "contract": "PositionStakingDexManagerStorage",
            "src": "contracts/libraries/types/PositionStakingDexManagerStorage.sol:85"
          },
          {
            "label": "userNft",
            "offset": 0,
            "slot": "171",
            "type": "t_mapping(t_address,t_mapping(t_address,t_array(t_uint256)dyn_storage))",
            "contract": "PositionStakingDexManagerStorage",
            "src": "contracts/libraries/types/PositionStakingDexManagerStorage.sol:88"
          },
          {
            "label": "nftOwnedIndex",
            "offset": 0,
            "slot": "172",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "PositionStakingDexManagerStorage",
            "src": "contracts/libraries/types/PositionStakingDexManagerStorage.sol:90"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(VestingData)10497_storage)dyn_storage": {
            "label": "struct VestingScheduleLogic.VestingData[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20)7748": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(IPosiTreasury)17574": {
            "label": "contract IPosiTreasury",
            "numberOfBytes": "20"
          },
          "t_contract(IPositionNondisperseLiquidity)17586": {
            "label": "contract IPositionNondisperseLiquidity",
            "numberOfBytes": "20"
          },
          "t_contract(IPositionReferral)17613": {
            "label": "contract IPositionReferral",
            "numberOfBytes": "20"
          },
          "t_enum(Frequency)10841": {
            "label": "enum VestingFrequencyHelper.Frequency",
            "members": [
              "Daily",
              "Weekly",
              "Monthly",
              "Bimonthly",
              "Quarterly",
              "Biannually"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_array(t_uint256)dyn_storage))": {
            "label": "mapping(address => mapping(address => uint256[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(UserInfo)18869_storage))": {
            "label": "mapping(address => mapping(address => struct PositionStakingDexManagerStorage.UserInfo))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_enum(Frequency)10841,t_array(t_struct(VestingData)10497_storage)dyn_storage))": {
            "label": "mapping(address => mapping(enum VestingFrequencyHelper.Frequency => struct VestingScheduleLogic.VestingData[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(PoolInfo)18884_storage)": {
            "label": "mapping(address => struct PositionStakingDexManagerStorage.PoolInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UserInfo)18869_storage)": {
            "label": "mapping(address => struct PositionStakingDexManagerStorage.UserInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(Frequency)10841,t_array(t_struct(VestingData)10497_storage)dyn_storage)": {
            "label": "mapping(enum VestingFrequencyHelper.Frequency => struct VestingScheduleLogic.VestingData[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_struct(PoolInfo)18884_storage": {
            "label": "struct PositionStakingDexManagerStorage.PoolInfo",
            "members": [
              {
                "label": "poolId",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalStaked",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "allocPoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "lastRewardBlock",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "accPositionPerShare",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "depositFeeBP",
                "type": "t_uint16",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "harvestInterval",
                "type": "t_uint128",
                "offset": 2,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(UserInfo)18869_storage": {
            "label": "struct PositionStakingDexManagerStorage.UserInfo",
            "members": [
              {
                "label": "amount",
                "type": "t_uint128",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "rewardDebt",
                "type": "t_uint128",
                "offset": 16,
                "slot": "0"
              },
              {
                "label": "rewardLockedUp",
                "type": "t_uint128",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "nextHarvestUntil",
                "type": "t_uint128",
                "offset": 16,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(VestingData)10497_storage": {
            "label": "struct VestingScheduleLogic.VestingData",
            "members": [
              {
                "label": "vestingTime",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint192",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint128": {
            "label": "uint128",
            "numberOfBytes": "16"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint192": {
            "label": "uint192",
            "numberOfBytes": "24"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "549446b1d1bd92ae399541c29ee8bdb8733fe1a6e6bcc28ce0a3f7b53590509b": {
      "address": "0x594e6c1e174F802A964ce4d397Af5cA5b744F67C",
      "txHash": "0x5302dd1733142f3f9fc9f56cd8709a53774006498a9cf61c44071f11caa15067",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "51",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "factory",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(ISpotFactory)4796",
            "contract": "PositionRouterStorage",
            "src": "contracts/libraries/types/PositionRouterStorage.sol:13"
          },
          {
            "label": "spotHouse",
            "offset": 0,
            "slot": "202",
            "type": "t_contract(ISpotHouse)4805",
            "contract": "PositionRouterStorage",
            "src": "contracts/libraries/types/PositionRouterStorage.sol:15"
          },
          {
            "label": "withdrawBNB",
            "offset": 0,
            "slot": "203",
            "type": "t_contract(IWithdrawBNB)5560",
            "contract": "PositionRouterStorage",
            "src": "contracts/libraries/types/PositionRouterStorage.sol:17"
          },
          {
            "label": "WBNB",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "PositionRouterStorage",
            "src": "contracts/libraries/types/PositionRouterStorage.sol:19"
          },
          {
            "label": "uniSwapRouterV2",
            "offset": 0,
            "slot": "205",
            "type": "t_contract(IUniswapV2Router02)5503",
            "contract": "PositionRouterStorage",
            "src": "contracts/libraries/types/PositionRouterStorage.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "206",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PositionRouterStorage",
            "src": "contracts/libraries/types/PositionRouterStorage.sol:28"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(ISpotFactory)4796": {
            "label": "contract ISpotFactory",
            "numberOfBytes": "20"
          },
          "t_contract(ISpotHouse)4805": {
            "label": "contract ISpotHouse",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Router02)5503": {
            "label": "contract IUniswapV2Router02",
            "numberOfBytes": "20"
          },
          "t_contract(IWithdrawBNB)5560": {
            "label": "contract IWithdrawBNB",
            "numberOfBytes": "20"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "956427e51533dffe5c54ac467b7110b0260df7fe9093c371af1fee949e2004ec": {
      "address": "0x363962935031F2B2125B3C453BcFB8dF8cE381a9",
      "txHash": "0x565d85a6c3b95ae0eb75fb8d6f914b3ee7094cbd90f426f64ae6af230cd10f4f",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "51",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "factory",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(ISpotFactory)4802",
            "contract": "PositionRouterStorage",
            "src": "contracts/libraries/types/PositionRouterStorage.sol:13"
          },
          {
            "label": "spotHouse",
            "offset": 0,
            "slot": "202",
            "type": "t_contract(ISpotHouse)4811",
            "contract": "PositionRouterStorage",
            "src": "contracts/libraries/types/PositionRouterStorage.sol:15"
          },
          {
            "label": "withdrawBNB",
            "offset": 0,
            "slot": "203",
            "type": "t_contract(IWithdrawBNB)5566",
            "contract": "PositionRouterStorage",
            "src": "contracts/libraries/types/PositionRouterStorage.sol:17"
          },
          {
            "label": "WBNB",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "PositionRouterStorage",
            "src": "contracts/libraries/types/PositionRouterStorage.sol:19"
          },
          {
            "label": "uniSwapRouterV2",
            "offset": 0,
            "slot": "205",
            "type": "t_contract(IUniswapV2Router02)5509",
            "contract": "PositionRouterStorage",
            "src": "contracts/libraries/types/PositionRouterStorage.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "206",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PositionRouterStorage",
            "src": "contracts/libraries/types/PositionRouterStorage.sol:28"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(ISpotFactory)4802": {
            "label": "contract ISpotFactory",
            "numberOfBytes": "20"
          },
          "t_contract(ISpotHouse)4811": {
            "label": "contract ISpotHouse",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Router02)5509": {
            "label": "contract IUniswapV2Router02",
            "numberOfBytes": "20"
          },
          "t_contract(IWithdrawBNB)5566": {
            "label": "contract IWithdrawBNB",
            "numberOfBytes": "20"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "06f7379b5bb14af8b2c129d4b7656fe7da696c7861af0c1a3b94f594164a59b5": {
      "address": "0x226d9FF7191069bbBBe845637fBF10e6669CB6EA",
      "txHash": "0xa59a69673b0c002673fd97d9805b90a790546cbfe1d8fd9e2e11249483d48eea",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "vestingSchedule",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_enum(Frequency)10246,t_array(t_struct(VestingData)9902_storage)dyn_storage))",
            "contract": "VestingScheduleBase",
            "src": "@positionex/posi-token/contracts/VestingScheduleBase.sol:8"
          },
          {
            "label": "_isWhiteListVesting",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "VestingScheduleBase",
            "src": "@positionex/posi-token/contracts/VestingScheduleBase.sol:9"
          },
          {
            "label": "position",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IERC20)7513",
            "contract": "PositionStakingDexManagerStorage",
            "src": "contracts/libraries/types/PositionStakingDexManagerStorage.sol:45"
          },
          {
            "label": "posiTreasury",
            "offset": 0,
            "slot": "154",
            "type": "t_contract(IPosiTreasury)13629",
            "contract": "PositionStakingDexManagerStorage",
            "src": "contracts/libraries/types/PositionStakingDexManagerStorage.sol:46"
          },
          {
            "label": "positionNondisperseLiquidity",
            "offset": 0,
            "slot": "155",
            "type": "t_contract(IPositionNondisperseLiquidity)13641",
            "contract": "PositionStakingDexManagerStorage",
            "src": "contracts/libraries/types/PositionStakingDexManagerStorage.sol:49"
          },
          {
            "label": "devAddress",
            "offset": 0,
            "slot": "156",
            "type": "t_address",
            "contract": "PositionStakingDexManagerStorage",
            "src": "contracts/libraries/types/PositionStakingDexManagerStorage.sol:52"
          },
          {
            "label": "positionPerBlock",
            "offset": 0,
            "slot": "157",
            "type": "t_uint256",
            "contract": "PositionStakingDexManagerStorage",
            "src": "contracts/libraries/types/PositionStakingDexManagerStorage.sol:54"
          },
          {
            "label": "feeAddress",
            "offset": 0,
            "slot": "158",
            "type": "t_address",
            "contract": "PositionStakingDexManagerStorage",
            "src": "contracts/libraries/types/PositionStakingDexManagerStorage.sol:56"
          },
          {
            "label": "BONUS_MULTIPLIER",
            "offset": 0,
            "slot": "159",
            "type": "t_uint256",
            "contract": "PositionStakingDexManagerStorage",
            "src": "contracts/libraries/types/PositionStakingDexManagerStorage.sol:58"
          },
          {
            "label": "MAXIMUM_HARVEST_INTERVAL",
            "offset": 0,
            "slot": "160",
            "type": "t_uint256",
            "contract": "PositionStakingDexManagerStorage",
            "src": "contracts/libraries/types/PositionStakingDexManagerStorage.sol:60"
          },
          {
            "label": "poolInfo",
            "offset": 0,
            "slot": "161",
            "type": "t_mapping(t_address,t_struct(PoolInfo)14529_storage)",
            "contract": "PositionStakingDexManagerStorage",
            "src": "contracts/libraries/types/PositionStakingDexManagerStorage.sol:63"
          },
          {
            "label": "userInfo",
            "offset": 0,
            "slot": "162",
            "type": "t_mapping(t_address,t_mapping(t_address,t_struct(UserInfo)14514_storage))",
            "contract": "PositionStakingDexManagerStorage",
            "src": "contracts/libraries/types/PositionStakingDexManagerStorage.sol:65"
          },
          {
            "label": "pools",
            "offset": 0,
            "slot": "163",
            "type": "t_array(t_address)dyn_storage",
            "contract": "PositionStakingDexManagerStorage",
            "src": "contracts/libraries/types/PositionStakingDexManagerStorage.sol:66"
          },
          {
            "label": "totalAllocPoint",
            "offset": 0,
            "slot": "164",
            "type": "t_uint256",
            "contract": "PositionStakingDexManagerStorage",
            "src": "contracts/libraries/types/PositionStakingDexManagerStorage.sol:68"
          },
          {
            "label": "startBlock",
            "offset": 0,
            "slot": "165",
            "type": "t_uint256",
            "contract": "PositionStakingDexManagerStorage",
            "src": "contracts/libraries/types/PositionStakingDexManagerStorage.sol:70"
          },
          {
            "label": "totalLockedUpRewards",
            "offset": 0,
            "slot": "166",
            "type": "t_uint256",
            "contract": "PositionStakingDexManagerStorage",
            "src": "contracts/libraries/types/PositionStakingDexManagerStorage.sol:72"
          },
          {
            "label": "posiStakingPid",
            "offset": 0,
            "slot": "167",
            "type": "t_uint256",
            "contract": "PositionStakingDexManagerStorage",
            "src": "contracts/libraries/types/PositionStakingDexManagerStorage.sol:74"
          },
          {
            "label": "positionReferral",
            "offset": 0,
            "slot": "168",
            "type": "t_contract(IPositionReferral)13668",
            "contract": "PositionStakingDexManagerStorage",
            "src": "contracts/libraries/types/PositionStakingDexManagerStorage.sol:77"
          },
          {
            "label": "referralCommissionRate",
            "offset": 20,
            "slot": "168",
            "type": "t_uint16",
            "contract": "PositionStakingDexManagerStorage",
            "src": "contracts/libraries/types/PositionStakingDexManagerStorage.sol:79"
          },
          {
            "label": "MAXIMUM_REFERRAL_COMMISSION_RATE",
            "offset": 22,
            "slot": "168",
            "type": "t_uint16",
            "contract": "PositionStakingDexManagerStorage",
            "src": "contracts/libraries/types/PositionStakingDexManagerStorage.sol:81"
          },
          {
            "label": "stakingMinted",
            "offset": 0,
            "slot": "169",
            "type": "t_uint256",
            "contract": "PositionStakingDexManagerStorage",
            "src": "contracts/libraries/types/PositionStakingDexManagerStorage.sol:83"
          },
          {
            "label": "harvestFeeShareRate",
            "offset": 0,
            "slot": "170",
            "type": "t_uint16",
            "contract": "PositionStakingDexManagerStorage",
            "src": "contracts/libraries/types/PositionStakingDexManagerStorage.sol:85"
          },
          {
            "label": "userNft",
            "offset": 0,
            "slot": "171",
            "type": "t_mapping(t_address,t_mapping(t_address,t_array(t_uint256)dyn_storage))",
            "contract": "PositionStakingDexManagerStorage",
            "src": "contracts/libraries/types/PositionStakingDexManagerStorage.sol:88"
          },
          {
            "label": "nftOwnedIndex",
            "offset": 0,
            "slot": "172",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "PositionStakingDexManagerStorage",
            "src": "contracts/libraries/types/PositionStakingDexManagerStorage.sol:90"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(VestingData)9902_storage)dyn_storage": {
            "label": "struct VestingScheduleLogic.VestingData[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20)7513": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(IPosiTreasury)13629": {
            "label": "contract IPosiTreasury",
            "numberOfBytes": "20"
          },
          "t_contract(IPositionNondisperseLiquidity)13641": {
            "label": "contract IPositionNondisperseLiquidity",
            "numberOfBytes": "20"
          },
          "t_contract(IPositionReferral)13668": {
            "label": "contract IPositionReferral",
            "numberOfBytes": "20"
          },
          "t_enum(Frequency)10246": {
            "label": "enum VestingFrequencyHelper.Frequency",
            "members": [
              "Daily",
              "Weekly",
              "Monthly",
              "Bimonthly",
              "Quarterly",
              "Biannually"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_array(t_uint256)dyn_storage))": {
            "label": "mapping(address => mapping(address => uint256[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(UserInfo)14514_storage))": {
            "label": "mapping(address => mapping(address => struct PositionStakingDexManagerStorage.UserInfo))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_enum(Frequency)10246,t_array(t_struct(VestingData)9902_storage)dyn_storage))": {
            "label": "mapping(address => mapping(enum VestingFrequencyHelper.Frequency => struct VestingScheduleLogic.VestingData[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(PoolInfo)14529_storage)": {
            "label": "mapping(address => struct PositionStakingDexManagerStorage.PoolInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UserInfo)14514_storage)": {
            "label": "mapping(address => struct PositionStakingDexManagerStorage.UserInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(Frequency)10246,t_array(t_struct(VestingData)9902_storage)dyn_storage)": {
            "label": "mapping(enum VestingFrequencyHelper.Frequency => struct VestingScheduleLogic.VestingData[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_struct(PoolInfo)14529_storage": {
            "label": "struct PositionStakingDexManagerStorage.PoolInfo",
            "members": [
              {
                "label": "poolId",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalStaked",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "allocPoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "lastRewardBlock",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "accPositionPerShare",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "depositFeeBP",
                "type": "t_uint16",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "harvestInterval",
                "type": "t_uint128",
                "offset": 2,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(UserInfo)14514_storage": {
            "label": "struct PositionStakingDexManagerStorage.UserInfo",
            "members": [
              {
                "label": "amount",
                "type": "t_uint128",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "rewardDebt",
                "type": "t_uint128",
                "offset": 16,
                "slot": "0"
              },
              {
                "label": "rewardLockedUp",
                "type": "t_uint128",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "nextHarvestUntil",
                "type": "t_uint128",
                "offset": 16,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(VestingData)9902_storage": {
            "label": "struct VestingScheduleLogic.VestingData",
            "members": [
              {
                "label": "vestingTime",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint192",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint128": {
            "label": "uint128",
            "numberOfBytes": "16"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint192": {
            "label": "uint192",
            "numberOfBytes": "24"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
